{"version":3,"sources":["../../src/pages/attendance/attendance.module.ts","../../src/serveices/business/user-service.ts","../../src/serveices/business/team-service.ts","../../src/serveices/business/attendance-service.ts","../../src/pages/attendance/attendance.ts"],"names":[],"mappings":"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","file":"3.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { AttendancePage } from './attendance';\nimport {TranslateModule} from '@ngx-translate/core';\nimport { AttendanceService } from '../../serveices/business/attendance-service';\nimport {TeamService} from '../../serveices/business/team-service';\nimport {UserService} from '../../serveices/business/user-service';\n\n@NgModule({\n  declarations: [\n    AttendancePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(AttendancePage),\n    TranslateModule,\n  ],\n  providers: [\n    AttendanceService,\n    UserService,\n    TeamService\n  ]\n})\nexport class AttendancePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/attendance/attendance.module.ts","//region\nimport {Injectable} from '@angular/core';\nimport {AppState, selectLoginForm, selectUserInfo} from '../../reducers/index-reducer';\nimport {Store} from '@ngrx/store';\nimport {Observable} from 'rxjs/Observable';\nimport {LoginResponse} from '../../interfaces/response-interface';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/operator/mergeMap';\n//endregion\n\n@Injectable()\nexport class UserService {\n  constructor(\n    public store: Store<AppState>\n  ){}\n\n  getUserInfo(): Observable<LoginResponse> {\n      return this.store.select(selectUserInfo);\n  }\n\n  getAccount(): Observable<string> {\n      return this.store.select(selectLoginForm).map(data => data.username);\n  }\n\n  getUserCharacter(): Observable<string> {\n      return this.getUserInfo().mergeMap(data => Observable.from(data.groups_list).first());\n  }\n\n  getUserId(): Observable<number> {\n      return this.getUserInfo().map(data => data.user_id);\n  }\n\n  getRealname(): Observable<string> {\n      return this.getUserInfo().map(data => data.realname);\n  }\n\n  getFaceImage(): Observable<string> {\n      return this.getUserInfo().map(data => data.face_image);\n  }\n\n  getSid(): Observable<string> {\n      return this.getUserInfo().map(data => data.sid);\n  }\n\n  getAuthPass(): Observable<boolean> {\n      return this.getUserInfo().map(data => data.auth_pass);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serveices/business/user-service.ts","//region\nimport {Injectable} from '@angular/core';\nimport {AppState, selectTeamResponse} from '../../reducers/index-reducer';\nimport {Store} from '@ngrx/store';\nimport {ErrorService} from '../errors/error-service';\nimport {ProcessorService} from '../api/processor-service';\nimport {Subscription} from 'rxjs/Subscription';\nimport {Observable} from 'rxjs/Observable';\nimport {Team} from '../../interfaces/response-interface';\nimport {UserService} from './user-service';\nimport {RequestOption} from '../../interfaces/request-interface';\nimport {WorkerService} from './worker-service';\nimport 'rxjs/add/observable/empty';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/zip';\nimport 'rxjs/add/operator/combineLatest';\nimport 'rxjs/add/operator/first';\nimport 'rxjs/add/operator/defaultIfEmpty';\nimport 'rxjs/add/observable/of';\nimport {CW, QW, SW, TL} from '../config/character';\nimport {ProjectService} from './project-service';\n\n//endregion\n\n\n@Injectable()\nexport class TeamService {\n\n  subscriptions: Subscription[] = [];\n\n  characterHasTeam = [TL, CW, QW, SW];\n\n  constructor(public store: Store<AppState>,\n              public error: ErrorService,\n              public process: ProcessorService,\n              public userInfo: UserService,\n              public project: ProjectService,\n              public workerService: WorkerService) {\n    this.handleError();\n  }\n\n  getTeams(): Observable<Team[]> {\n    return this.store.select(selectTeamResponse).map(res => res.teams);\n  }\n\n  getTeamList(option: Observable<RequestOption> = Observable.empty()): void {\n    const option$ = this.userInfo.getSid()\n      .map(sid => ({sid}))\n      .combineLatest(option.defaultIfEmpty({}), (sid, option) => Object.assign(sid, option));\n\n    const teamList$$ = this.process.teamListProcessor(option$);\n\n    this.subscriptions.push(teamList$$);\n  }\n\n  getOwnTeam(): Observable<Team> {\n    const character$ = this.userInfo.getUserCharacter()\n      .map(char => this.characterHasTeam.indexOf(char) !== -1);\n\n    const teamId$ = this.workerService.getOwnContract()\n      .filter(value => !!value)\n      .map(contract => contract.team_id);\n\n    const team$ = this.getTeams()\n      .zip(teamId$, (teams, id) => teams.find(team => team.id === id))\n      .mergeMap(team => {\n        if (!!team) return Observable.of(team);\n\n        this.getTeamList();\n\n        return this.getTeams().mergeMap(teams => {\n          if(!teams) return Observable.empty();\n          return Observable.from(teams).first();\n        });\n      });\n\n    return character$.mergeMap(isTeamCharacter => {\n      if(isTeamCharacter) return team$;\n      return Observable.of(null);\n    })\n  }\n\n  getOwnTeams(): Observable<Team[]> {\n    return this.getTeams().mergeMap(teams => {\n      if (teams.length) return Observable.of(teams);\n\n      const option = this.project.getCurrentProject().map(project => ({project_id: project.id}));\n\n      this.getTeamList(option);\n\n      return this.getTeams();\n    })\n  }\n\n  private handleError() {\n    const error$ = this.store.select(selectTeamResponse);\n\n    const subscription = this.error.handleErrorInSpecific(error$, 'API_ERROR');\n\n    this.subscriptions.push(subscription);\n  }\n\n  unSubscribe() {\n    this.subscriptions.forEach(item => item.unsubscribe());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serveices/business/team-service.ts","//region\nimport { Injectable } from '@angular/core';\nimport { AppState, selectAttendanceList, selectAttendanceResponse, selectAttendanceDatePeriod } from '../../reducers/index-reducer';\nimport { Store } from '@ngrx/store';\nimport { ProcessorService } from '../api/processor-service';\nimport { ErrorService } from '../errors/error-service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { AttendanceResult } from '../../interfaces/response-interface';\nimport { AttendanceResultListOptions, RequestOption } from '../../interfaces/request-interface';\nimport 'rxjs/add/observable/empty'\nimport { DatePeriod } from '../../reducers/reducer/attendance-reducer';\nimport { SetAttendanceStartDate, SetAttendanceEndDate } from '../../actions/action/attendance-actions';\n//endregion\n\n@Injectable()\nexport class AttendanceService {\n  subscriptions: Subscription[] = [];\n\n  constructor(public store: Store<AppState>,\n    public processor: ProcessorService,\n    public error: ErrorService) {\n    this.handleError();\n  }\n\n  getAttendanceResultList(option: Observable<RequestOption>): Observable<AttendanceResult[]> {\n    return this.store.select(selectAttendanceList);\n  }\n\n  getAttendanceResult(option: Observable<AttendanceResultListOptions> = Observable.empty()): void {\n\n  }\n\n  getSelectedDate(): Observable<DatePeriod> {\n    return this.store.select(selectAttendanceDatePeriod);\n  }\n\n  setDate(type: string, data: string): void {\n    if (type === 'start') {\n      this.store.dispatch(new SetAttendanceStartDate(data));\n    }\n    this.store.dispatch(new SetAttendanceEndDate(data));\n  }\n\n  handleError() {\n    const error = this.store.select(selectAttendanceResponse);\n\n    const subscription = this.error.handleErrorInSpecific(error, 'API_ERROR');\n\n    this.subscriptions.push(subscription);\n  }\n\n  unSubscribe() {\n    this.subscriptions.forEach(item => item.unsubscribe());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serveices/business/attendance-service.ts","//region\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AttendanceService } from '../../serveices/business/attendance-service';\nimport { TimeService } from '../../serveices/utils/time-service';\nimport { Observable } from 'rxjs/Observable';\nimport { Team, AttendanceResult } from '../../interfaces/response-interface';\nimport { TeamService } from '../../serveices/business/team-service';\nimport { Subscription } from 'rxjs/Subscription';\n//endregion\n\n/**\n * Generated class for the AttendancePage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\nexport interface TeamOption {\n\n}\n@IonicPage()\n@Component({\n  selector: 'page-attendance',\n  templateUrl: 'attendance.html',\n})\nexport class AttendancePage {\n  startDate: string;\n  endDate: string;\n  toppings = 'Bacon';\n  pepperoni = '';\n  sausage = '';\n  mushrooms = '';\n  teams: Observable<Team[]>;\n  attendances: Observable<AttendanceResult[]>;\n  selectedTeams: string;\n  dateSubscription: Subscription;\n\n  constructor(public navCtrl: NavController,\n    public navParams: NavParams,\n    public attendance: AttendanceService,\n    public timeService: TimeService,\n    public teamService: TeamService,\n    public translate: TranslateService) {\n  }\n\n  ionViewDidLoad() {\n    this.initialDate();\n    this.teams = this.teamService.getOwnTeams();\n    this.getAttendances();\n  }\n\n  initialDate() {\n    const datePeriod = this.attendance.getSelectedDate();\n\n    this.dateSubscription = datePeriod.subscribe(data => {\n      this.startDate = this.timeService.getDate(data.start, true);\n      this.endDate = this.timeService.getDate(data.end, true);\n    });\n  }\n\n  setDate(type: string) {\n    const data = type === 'start' ? this.startDate: this.endDate;\n    this.attendance.setDate(type, data);\n  }\n\n  getAttendances() {\n    // const option = Observable.of({})\n    // this.attendances = this.attendance.getAttendanceResultList();\n  }\n\n  getAttendanceResultList() {\n\n  }\n\n  getItems(input: string) {\n\n  }\n\n  click() {\n    console.log('arrow clicked');\n  }\n\n  ionViewWillUnload(){\n   this.dateSubscription.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/attendance/attendance.ts"],"sourceRoot":""}