{"version":3,"sources":["../../src/pages/search-company/search-company.module.ts","../../node_modules/@ngrx/effects/@ngrx/effects.es5.js","../../src/pages/search-company/search-company.ts","../../src/effects/search-effect.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAuC;AACO;AACK;AACiB;AACxB;AACa;AACL;AACA;AAgBpD;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QAdnC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,0EAAiB;aAClB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,0EAAiB,CAAC;gBAC3C,uFAAgB;gBAChB,oEAAa,CAAC,OAAO,CAAC,CAAC,4EAAY,CAAC,CAAC;gBACrC,4EAAe;aAChB;YACD,SAAS,EAAE;gBACT,uEAAO;aACR;SACF,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBpC;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC4D;AAClC;AACkB;AACN;AAChB;AAC0C;AAC5B;AACR;AACE;AACE;AACI;AACM;AACZ;AAC/B;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB;AACA,4DAA4D,YAAY;AACxE;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,qCAAqC,iBAAiB;AACtD;AACA,uBAAuB,EAAE,gBAAgB;AACzC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,kCAAkC;AAClC,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,mHAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,SAAS,EAAE,EAAE;AACb,KAAK;AACL;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,0GAAsD,2CAA2C,6BAA6B,EAAE,EAAE,EAAE;AACpI;AACA;AACA,CAAC;AACD;AACA,KAAK,0EAAmB;AACxB;AACA;AACA;AACA;AACA,sCAAsC;AACtC,KAAK,kFAAmC,2JAA+C,IAAI;AAC3F,EAAE;AACF;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,0EAAmB;AACxB;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,KAAK,gCAAgC,wFAAiC,IAAI;AAC1E,EAAE;AACF;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,0MAA+F;AAC/F;AACA;AACA,SAAS,4BAA4B,kCAAkC,EAAE,GAAG,EAAE;AAC9E;AACA;AACA,CAAC;AACD;AACA,KAAK,0EAAmB;AACxB;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,KAAK,uBAAuB;AAC5B,EAAE;AACF;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,0EAAmB;AACxB;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,KAAK,uBAAuB;AAC5B,KAAK,oEAAe;AACpB,EAAE;AACF;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,6DAA6D,iDAAiD,EAAE;AAChH,2BAA2B,0BAA0B;AACrD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,iFAA0B,IAAI;AACnC;AACA;AACA;AACA;AACA,gDAAgD;AAChD,KAAK,uBAAuB;AAC5B,KAAK,uBAAuB;AAC5B,KAAK,oEAAe;AACpB,KAAK,4BAA4B,6FAAsC,IAAI;AAC3E,KAAK,uFAAkC,wEAAiB,IAAI;AAC5D,EAAE;AACF;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,qDAAqD,uDAAuD,8CAA8C,EAAE,EAAE,EAAE;AAChK;AACA;AACA,CAAC;AACD;AACA,KAAK,iFAA0B,IAAI;AACnC;AACA;AACA;AACA;AACA,mDAAmD;AACnD,KAAK,2BAA2B;AAChC,KAAK,4BAA4B,gGAAyC,IAAI;AAC9E,KAAK,uFAAkC,wEAAiB,IAAI;AAC5D,EAAE;AACF;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,iFAA0B,IAAI;AACnC;AACA;AACA;AACA;AACA,4CAA4C,WAAW;AACvD;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpewC;AACiC;AAGhB;AAEvB;AACmD;AAChD;AACP;AACY;AACX;AAQ/B;IASE,2BAAmB,OAAsB,EACtB,SAAoB,EACpB,QAAwB,EACxB,KAAsB;QAHtB,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,aAAQ,GAAR,QAAQ,CAAgB;QACxB,UAAK,GAAL,KAAK,CAAiB;QAXzC,eAAU,GAAG,OAAO,CAAC;QAYnB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,kFAA0B,CAAC,CAAC;QAC7D,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,sFAA8B,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,oFAA4B,CAAC,CAAC;IAC7D,CAAC;IAED,0CAAc,GAAd;IAEA,CAAC;IAED,mCAAO,GAAP;QACE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAS,GAAT,UAAU,IAAY;QACpB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;YAAC,MAAM,CAAC;QAClB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,mFAAmB,CAAC,EAAC,IAAI,QAAC,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,yCAAa,GAAb,UAAc,EAAE;QACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,mFAAmB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1D,CAAC;IAlCU,iBAAiB;QAJ7B,wEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;WACG;SACnC,CAAC;6EAUyC;YACX,qEAAS;YACV,4DAAc;YACjB,KAAK;OAZpB,iBAAiB,CAmC7B;IAAD,CAAC;AAAA;SAnCY,iBAAiB,gB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnB9B,QAAQ;AACiC;AACK;AACsB;AACzB;AAC0C;AACpC;AACX;AAGtC,WAAW;AAGX;IAeE,sBAAmB,QAAiB,EACjB,EAAoB,EACpB,OAAgB;QAFnC,iBAGC;QAHkB,aAAQ,GAAR,QAAQ,CAAS;QACjB,OAAE,GAAF,EAAE,CAAkB;QACpB,YAAO,GAAP,OAAO,CAAS;QAfnC,mBAAc,GAA+B,IAAI,CAAC,QAAQ;aACvD,MAAM,CAAC,8EAAc,CAAC;aACtB,QAAQ,CAAC,UAAC,MAAqB,IAAK,YAAI,CAAC,EAAE;aACzC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aAChD,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,8EAAc,CAAC,CAAC;aAC/C,GAAG,CAAC,aAAG;YACN,IAAM,OAAO,GAAG,GAAG,CAAC,OAAO,GAAG,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;YACtD,MAAM,CAAC,IAAI,2FAA2B,CAAC,OAAO,CAAC,CAAC;QAClD,CAAC,CAAC;aACD,KAAK,CAAC,eAAK,IAAI,qEAAE,CAAC,KAAK,CAAC,EAAT,CAAS,CAAC,EAPS,CAOT,CAC3B,CAAC;IAMJ,CAAC;IAhBD;QADC,qEAAM,EAAE;kCACO,2DAAU;wDAUtB;IAZO,YAAY;QADxB,yEAAU,EAAE;yCAgBkB,8DAAO;YACb,0FAAgB;YACX,uEAAO;OAjBxB,YAAY,CAmBxB;IAAD,mBAAC;CAAA;AAnBwB","file":"5.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {IonicPageModule} from 'ionic-angular';\nimport {SearchCompanyPage} from './search-company';\nimport {ComponentsModule} from '../../components/components.module';\nimport {EffectsModule} from '@ngrx/effects';\nimport {SearchEffect} from '../../effects/search-effect';\nimport {Command} from '../../serveices/api/command';\nimport {TranslateModule} from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    SearchCompanyPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SearchCompanyPage),\n    ComponentsModule,\n    EffectsModule.forRoot([SearchEffect]),\n    TranslateModule\n  ],\n  providers: [\n    Command\n  ]\n})\nexport class SearchCompanyPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/search-company/search-company.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ScannedActionsSubject, Store, StoreModule, compose } from '@ngrx/store';\nimport { merge as merge$1 } from 'rxjs/observable/merge';\nimport { ignoreElements as ignoreElements$1 } from 'rxjs/operator/ignoreElements';\nimport { materialize as materialize$1 } from 'rxjs/operator/materialize';\nimport { map as map$1 } from 'rxjs/operator/map';\nimport { Inject, Injectable, InjectionToken, NgModule, Optional } from '@angular/core';\nimport { Observable as Observable$1 } from 'rxjs/Observable';\nimport { filter as filter$1 } from 'rxjs/operator/filter';\nimport { groupBy as groupBy$1 } from 'rxjs/operator/groupBy';\nimport { mergeMap as mergeMap$1 } from 'rxjs/operator/mergeMap';\nimport { exhaustMap as exhaustMap$1 } from 'rxjs/operator/exhaustMap';\nimport { dematerialize as dematerialize$1 } from 'rxjs/operator/dematerialize';\nimport { Subject as Subject$1 } from 'rxjs/Subject';\nvar METADATA_KEY = '__@ngrx/effects__';\n/**\n * @param {?} sourceProto\n * @return {?}\n */\nfunction getEffectMetadataEntries(sourceProto) {\n    return sourceProto.constructor[METADATA_KEY] || [];\n}\n/**\n * @param {?} sourceProto\n * @param {?} entries\n * @return {?}\n */\nfunction setEffectMetadataEntries(sourceProto, entries) {\n    var /** @type {?} */ constructor = sourceProto.constructor;\n    var /** @type {?} */ meta = constructor.hasOwnProperty(METADATA_KEY)\n        ? ((constructor))[METADATA_KEY]\n        : Object.defineProperty(constructor, METADATA_KEY, { value: [] })[METADATA_KEY];\n    Array.prototype.push.apply(meta, entries);\n}\n/**\n * @param {?=} __0\n * @return {?}\n */\nfunction Effect(_a) {\n    var dispatch = (_a === void 0 ? { dispatch: true } : _a).dispatch;\n    return function (target, propertyName) {\n        var /** @type {?} */ metadata = { propertyName: propertyName, dispatch: dispatch };\n        setEffectMetadataEntries(target, [metadata]);\n    };\n}\n/**\n * @param {?} instance\n * @return {?}\n */\nfunction getSourceForInstance(instance) {\n    return Object.getPrototypeOf(instance);\n}\nvar getSourceMetadata = compose(getEffectMetadataEntries, getSourceForInstance);\n/**\n * @template T\n * @param {?} instance\n * @return {?}\n */\nfunction getEffectsMetadata(instance) {\n    var /** @type {?} */ metadata = {};\n    getSourceMetadata(instance).forEach(function (_a) {\n        var propertyName = _a.propertyName, dispatch = _a.dispatch;\n        metadata[propertyName] = { dispatch: dispatch };\n    });\n    return metadata;\n}\nvar onRunEffectsKey = 'ngrxOnRunEffects';\n/**\n * @param {?} sourceInstance\n * @return {?}\n */\nfunction isOnRunEffects(sourceInstance) {\n    var /** @type {?} */ source = getSourceForInstance(sourceInstance);\n    return (onRunEffectsKey in source && typeof source[onRunEffectsKey] === 'function');\n}\n/**\n * @param {?} sourceInstance\n * @return {?}\n */\nfunction mergeEffects(sourceInstance) {\n    var /** @type {?} */ sourceName = getSourceForInstance(sourceInstance).constructor.name;\n    var /** @type {?} */ observables = getSourceMetadata(sourceInstance).map(function (_a) {\n        var propertyName = _a.propertyName, dispatch = _a.dispatch;\n        var /** @type {?} */ observable = typeof sourceInstance[propertyName] === 'function'\n            ? sourceInstance[propertyName]()\n            : sourceInstance[propertyName];\n        if (dispatch === false) {\n            return ignoreElements$1.call(observable);\n        }\n        var /** @type {?} */ materialized$ = materialize$1.call(observable);\n        return map$1.call(materialized$, function (notification) { return ({\n            effect: sourceInstance[propertyName],\n            notification: notification,\n            propertyName: propertyName,\n            sourceName: sourceName,\n            sourceInstance: sourceInstance,\n        }); });\n    });\n    return merge$1.apply(void 0, observables);\n}\n/**\n * @param {?} sourceInstance\n * @return {?}\n */\nfunction resolveEffectSource(sourceInstance) {\n    var /** @type {?} */ mergedEffects$ = mergeEffects(sourceInstance);\n    if (isOnRunEffects(sourceInstance)) {\n        return sourceInstance.ngrxOnRunEffects(mergedEffects$);\n    }\n    return mergedEffects$;\n}\nvar Actions = (function (_super) {\n    __extends(Actions, _super);\n    /**\n     * @param {?=} source\n     */\n    function Actions(source) {\n        var _this = _super.call(this) || this;\n        if (source) {\n            _this.source = source;\n        }\n        return _this;\n    }\n    /**\n     * @template R\n     * @param {?} operator\n     * @return {?}\n     */\n    Actions.prototype.lift = function (operator) {\n        var /** @type {?} */ observable = new Actions();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    /**\n     * @template V2\n     * @param {...?} allowedTypes\n     * @return {?}\n     */\n    Actions.prototype.ofType = function () {\n        var allowedTypes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            allowedTypes[_i] = arguments[_i];\n        }\n        return filter$1.call(this, function (action) { return allowedTypes.some(function (type) { return type === action.type; }); });\n    };\n    return Actions;\n}(Observable$1));\nActions.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nActions.ctorParameters = function () { return [\n    { type: Observable$1, decorators: [{ type: Inject, args: [ScannedActionsSubject,] },] },\n]; };\n/**\n * @param {?} output\n * @param {?} reporter\n * @return {?}\n */\nfunction verifyOutput(output, reporter) {\n    reportErrorThrown(output, reporter);\n    reportInvalidActions(output, reporter);\n}\n/**\n * @param {?} output\n * @param {?} reporter\n * @return {?}\n */\nfunction reportErrorThrown(output, reporter) {\n    if (output.notification.kind === 'E') {\n        var /** @type {?} */ errorReason = \"Effect \" + getEffectName(output) + \" threw an error\";\n        reporter.report(errorReason, {\n            Source: output.sourceInstance,\n            Effect: output.effect,\n            Error: output.notification.error,\n            Notification: output.notification,\n        });\n    }\n}\n/**\n * @param {?} output\n * @param {?} reporter\n * @return {?}\n */\nfunction reportInvalidActions(output, reporter) {\n    if (output.notification.kind === 'N') {\n        var /** @type {?} */ action = output.notification.value;\n        var /** @type {?} */ isInvalidAction = !isAction(action);\n        if (isInvalidAction) {\n            var /** @type {?} */ errorReason = \"Effect \" + getEffectName(output) + \" dispatched an invalid action\";\n            reporter.report(errorReason, {\n                Source: output.sourceInstance,\n                Effect: output.effect,\n                Dispatched: action,\n                Notification: output.notification,\n            });\n        }\n    }\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction isAction(action) {\n    return action && action.type && typeof action.type === 'string';\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction getEffectName(_a) {\n    var propertyName = _a.propertyName, sourceInstance = _a.sourceInstance, sourceName = _a.sourceName;\n    var /** @type {?} */ isMethod = typeof sourceInstance[propertyName] === 'function';\n    return \"\\\"\" + sourceName + \".\" + propertyName + (isMethod ? '()' : '') + \"\\\"\";\n}\nvar IMMEDIATE_EFFECTS = new InjectionToken('ngrx/effects: Immediate Effects');\nvar ROOT_EFFECTS = new InjectionToken('ngrx/effects: Root Effects');\nvar FEATURE_EFFECTS = new InjectionToken('ngrx/effects: Feature Effects');\nvar CONSOLE = new InjectionToken('Browser Console');\nvar ErrorReporter = (function () {\n    /**\n     * @param {?} console\n     */\n    function ErrorReporter(console) {\n        this.console = console;\n    }\n    /**\n     * @param {?} reason\n     * @param {?} details\n     * @return {?}\n     */\n    ErrorReporter.prototype.report = function (reason, details) {\n        this.console.group(reason);\n        for (var /** @type {?} */ key in details) {\n            this.console.error(key + \":\", details[key]);\n        }\n        this.console.groupEnd();\n    };\n    return ErrorReporter;\n}());\nErrorReporter.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nErrorReporter.ctorParameters = function () { return [\n    { type: undefined, decorators: [{ type: Inject, args: [CONSOLE,] },] },\n]; };\nvar EffectSources = (function (_super) {\n    __extends(EffectSources, _super);\n    /**\n     * @param {?} errorReporter\n     */\n    function EffectSources(errorReporter) {\n        var _this = _super.call(this) || this;\n        _this.errorReporter = errorReporter;\n        return _this;\n    }\n    /**\n     * @param {?} effectSourceInstance\n     * @return {?}\n     */\n    EffectSources.prototype.addEffects = function (effectSourceInstance) {\n        this.next(effectSourceInstance);\n    };\n    /**\n     * @return {?}\n     */\n    EffectSources.prototype.toActions = function () {\n        var _this = this;\n        return mergeMap$1.call(groupBy$1.call(this, getSourceForInstance), function (source$) { return dematerialize$1.call(filter$1.call(map$1.call(exhaustMap$1.call(source$, resolveEffectSource), function (output) {\n            verifyOutput(output, _this.errorReporter);\n            return output.notification;\n        }), function (notification) { return notification.kind === 'N'; })); });\n    };\n    return EffectSources;\n}(Subject$1));\nEffectSources.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nEffectSources.ctorParameters = function () { return [\n    { type: ErrorReporter, },\n]; };\nvar EffectsRunner = (function () {\n    /**\n     * @param {?} effectSources\n     * @param {?} store\n     */\n    function EffectsRunner(effectSources, store$$1) {\n        this.effectSources = effectSources;\n        this.store = store$$1;\n        this.effectsSubscription = null;\n    }\n    /**\n     * @return {?}\n     */\n    EffectsRunner.prototype.start = function () {\n        if (!this.effectsSubscription) {\n            this.effectsSubscription = this.effectSources\n                .toActions()\n                .subscribe(this.store);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EffectsRunner.prototype.ngOnDestroy = function () {\n        if (this.effectsSubscription) {\n            this.effectsSubscription.unsubscribe();\n            this.effectsSubscription = null;\n        }\n    };\n    return EffectsRunner;\n}());\nEffectsRunner.decorators = [\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nEffectsRunner.ctorParameters = function () { return [\n    { type: EffectSources, },\n    { type: Store, },\n]; };\nvar ROOT_EFFECTS_INIT = '@ngrx/effects/init';\nvar EffectsRootModule = (function () {\n    /**\n     * @param {?} sources\n     * @param {?} runner\n     * @param {?} store\n     * @param {?} rootEffects\n     * @param {?} storeModule\n     */\n    function EffectsRootModule(sources, runner, store$$1, rootEffects, storeModule) {\n        this.sources = sources;\n        runner.start();\n        rootEffects.forEach(function (effectSourceInstance) { return sources.addEffects(effectSourceInstance); });\n        store$$1.dispatch({ type: ROOT_EFFECTS_INIT });\n    }\n    /**\n     * @param {?} effectSourceInstance\n     * @return {?}\n     */\n    EffectsRootModule.prototype.addEffects = function (effectSourceInstance) {\n        this.sources.addEffects(effectSourceInstance);\n    };\n    return EffectsRootModule;\n}());\nEffectsRootModule.decorators = [\n    { type: NgModule, args: [{},] },\n];\n/**\n * @nocollapse\n */\nEffectsRootModule.ctorParameters = function () { return [\n    { type: EffectSources, },\n    { type: EffectsRunner, },\n    { type: Store, },\n    { type: Array, decorators: [{ type: Inject, args: [ROOT_EFFECTS,] },] },\n    { type: StoreModule, decorators: [{ type: Optional },] },\n]; };\nvar EffectsFeatureModule = (function () {\n    /**\n     * @param {?} root\n     * @param {?} effectSourceGroups\n     * @param {?} storeModule\n     */\n    function EffectsFeatureModule(root, effectSourceGroups, storeModule) {\n        this.root = root;\n        effectSourceGroups.forEach(function (group) { return group.forEach(function (effectSourceInstance) { return root.addEffects(effectSourceInstance); }); });\n    }\n    return EffectsFeatureModule;\n}());\nEffectsFeatureModule.decorators = [\n    { type: NgModule, args: [{},] },\n];\n/**\n * @nocollapse\n */\nEffectsFeatureModule.ctorParameters = function () { return [\n    { type: EffectsRootModule, },\n    { type: Array, decorators: [{ type: Inject, args: [FEATURE_EFFECTS,] },] },\n    { type: StoreModule, decorators: [{ type: Optional },] },\n]; };\nvar EffectsModule = (function () {\n    function EffectsModule() {\n    }\n    /**\n     * @param {?} featureEffects\n     * @return {?}\n     */\n    EffectsModule.forFeature = function (featureEffects) {\n        return {\n            ngModule: EffectsFeatureModule,\n            providers: [\n                featureEffects,\n                {\n                    provide: FEATURE_EFFECTS,\n                    multi: true,\n                    deps: featureEffects,\n                    useFactory: createSourceInstances,\n                },\n            ],\n        };\n    };\n    /**\n     * @param {?} rootEffects\n     * @return {?}\n     */\n    EffectsModule.forRoot = function (rootEffects) {\n        return {\n            ngModule: EffectsRootModule,\n            providers: [\n                EffectsRunner,\n                EffectSources,\n                ErrorReporter,\n                Actions,\n                rootEffects,\n                {\n                    provide: ROOT_EFFECTS,\n                    deps: rootEffects,\n                    useFactory: createSourceInstances,\n                },\n                {\n                    provide: CONSOLE,\n                    useFactory: getConsole,\n                },\n            ],\n        };\n    };\n    return EffectsModule;\n}());\nEffectsModule.decorators = [\n    { type: NgModule, args: [{},] },\n];\n/**\n * @nocollapse\n */\nEffectsModule.ctorParameters = function () { return []; };\n/**\n * @param {...?} instances\n * @return {?}\n */\nfunction createSourceInstances() {\n    var instances = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        instances[_i] = arguments[_i];\n    }\n    return instances;\n}\n/**\n * @return {?}\n */\nfunction getConsole() {\n    return console;\n}\n/**\n * @deprecated Since version 4.1. Will be deleted in version 5.0.\n * @param {?} action\n * @return {?}\n */\nfunction toPayload(action) {\n    return ((action)).payload;\n}\n/**\n * Generated bundle index. Do not edit.\n */\nexport { Effect, getEffectsMetadata, mergeEffects, Actions, EffectsModule, EffectSources, toPayload, ROOT_EFFECTS_INIT, EffectsFeatureModule as ɵd, createSourceInstances as ɵa, getConsole as ɵb, EffectsRootModule as ɵc, EffectsRunner as ɵi, ErrorReporter as ɵh, CONSOLE as ɵg, FEATURE_EFFECTS as ɵf, ROOT_EFFECTS as ɵe };\n//# sourceMappingURL=effects.es5.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ngrx/effects/@ngrx/effects.es5.js\n// module id = 669\n// module chunks = 0 1 2 3 5","import {Component} from '@angular/core';\nimport {IonicPage, NavController, NavParams, ViewController} from 'ionic-angular';\nimport {Observable} from 'rxjs/Observable';\nimport {Company} from '../../interfaces/response-interface';\nimport * as fromRoot from '../../reducers/index-reducer';\nimport {AppState} from '../../reducers/index-reducer';\nimport {Store} from '@ngrx/store';\nimport {SearchCompanyAction, SelectCompanyAction} from '../../actions/search-action';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/withLatestFrom';\nimport 'rxjs/add/operator/map';\n\n\n@IonicPage()\n@Component({\n  selector: 'page-search-company',\n  templateUrl: 'search-company.html',\n})\nexport class SearchCompanyPage {\n  selectType = 'radio';\n\n  companies$: Observable<Company[]>;\n\n  loading$: Observable<boolean>;\n\n  searchQuery$: Observable<string>;\n\n  constructor(public navCtrl: NavController,\n              public navParams: NavParams,\n              public viewCtrl: ViewController,\n              public store: Store<AppState>) {\n    this.searchQuery$ = store.select(fromRoot.selectSearchQuery);\n    this.companies$ = store.select(fromRoot.selectSearchCompanies);\n    this.loading$ = store.select(fromRoot.selectSearchLoading);\n  }\n\n  ionViewDidLoad() {\n\n  }\n\n  dismiss() {\n    this.viewCtrl.dismiss().then(() => {\n    });\n  }\n\n  getSearch(name: string) {\n    if (!name) return;\n    this.store.dispatch(new SearchCompanyAction({name}));\n  }\n\n  selectCompany(id) {\n    this.store.dispatch(new SelectCompanyAction(Number(id)))\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/search-company/search-company.ts","//region\nimport {Injectable} from '@angular/core';\nimport {Actions, Effect} from '@ngrx/effects';\nimport {WebsocketService} from '../serveices/api/websocket-service';\nimport {Observable} from 'rxjs/Observable';\nimport {SEARCH_COMPANY, SearchCompanyCompleteAction} from '../actions/search-action';\nimport {Command} from '../serveices/api/command';\nimport {of} from 'rxjs/observable/of';\nimport {RequestAction} from '../interfaces/request-interface';\nimport {ResponseAction} from '../interfaces/response-interface';\n//endregion\n\n@Injectable()\nexport class SearchEffect {\n  @Effect()\n  searchCompany$: Observable<ResponseAction> = this.actions$\n    .ofType(SEARCH_COMPANY)\n    .mergeMap((action: RequestAction) => this.ws\n      .send(this.command.searchCompany(action.payload))\n      .takeUntil(this.actions$.ofType(SEARCH_COMPANY))\n      .map(res => {\n        const payload = res.isError ? [] : res.data.companies;\n        return new SearchCompanyCompleteAction(payload);\n      })\n      .catch(error => of(error))\n    );\n\n\n  constructor(public actions$: Actions,\n              public ws: WebsocketService,\n              public command: Command) {\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/effects/search-effect.ts"],"sourceRoot":""}