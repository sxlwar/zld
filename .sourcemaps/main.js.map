{"version":3,"sources":["../../src/providers/providers.ts","../../src/reducers/index-reducer.ts","../../src/serveices/errors/error-service.ts","../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/mocks/providers/items.ts","../../src/actions/config-action.ts","../../src/serveices/config/config-service.ts","../../src/actions/search-action.ts","../../src/pages/pages.ts","../../src/serveices/api/websocket-service.ts","../../src/actions/tutorial-action.ts","../../src/serveices/api/mapper-service.ts","../../src/serveices/api/processor-service.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/models/item.ts","../../src/providers/settings/settings.ts","../../src/providers/user/user.ts","../../src/reducers/config-reducer.ts","../../src/reducers/tutorial-reducer.ts","../../src/reducers/login-reducer.ts","../../src/reducers/search-reducer.ts","../../src/app/app.component.ts","../../src/serveices/api/http-service.ts","../../src/actions/login-action.ts","../../src/environments/environment.zldtest.ts","../../src/providers/api/api.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Api } from './api/api';\nimport { Items } from '../mocks/providers/items';\nimport { Settings } from './settings/settings';\nimport { User } from './user/user';\n\nexport {\n    Api,\n    Items,\n    Settings,\n    User\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/providers.ts","import {ActionReducerMap, createSelector} from '@ngrx/store';\nimport * as config from './config-reducer';\nimport * as tutorial from './tutorial-reducer';\nimport * as login from './login-reducer';\nimport * as search from './search-reducer';\n\nimport {\n  RegisterResponse, LoginResponse, ResetPasswordResponse,\n  PhoneVerCodeResponse\n} from '../interfaces/response-interface';\n\nexport interface AppState {\n  config: config.State;\n  tutorialPage: tutorial.State;\n  loginPage: login.State;\n  userInfo: LoginResponse;\n  search: search.State;\n  phoneVerCode: PhoneVerCodeResponse;\n  register: RegisterResponse;\n  resetPhoneVerCode: PhoneVerCodeResponse;\n  resetPassword: ResetPasswordResponse;\n}\n\nexport const reducers: ActionReducerMap<AppState> = {\n  config: config.reducer,\n  tutorialPage: tutorial.reducer,\n  loginPage: login.reducer,\n  userInfo: login.userInfoReducer,\n  search: search.reducer,\n  phoneVerCode: login.registerPhoneVerReducer,\n  register: login.registerReducer,\n  resetPhoneVerCode: login.resetPwdPhoneVerReducer,\n  resetPassword: login.resetPasswordReducer\n};\n\n//config\nexport const getConfig = (state: AppState) => state.config;\nexport const selectButtonText = createSelector(getConfig, config.getBackButtonText);\nexport const selectPlatformDirection = createSelector(getConfig, config.getPlatFormDirection);\n\n/*==============================================Pages selectors====================================================*/\n\n//tutorialPage\nexport const getTutorialPage = (state: AppState) => state.tutorialPage;\nexport const selectSkipState = createSelector(getTutorialPage, tutorial.getSkipState);\nexport const selectTutorialSlides = createSelector(getTutorialPage, tutorial.getTutorialSlides);\n\n//loginPage\nexport const getLoginPage = (state: AppState) => state.loginPage;\nexport const selectActiveIndexOfSlides = createSelector(getLoginPage, login.getActiveIndexOfSlides);\nexport const selectActiveIndexOfInnerSlides = createSelector(getLoginPage, login.getActiveIndexOfInnerSlides);\nexport const selectLoginForm = createSelector(getLoginPage, login.getLoginForm);\nexport const selectLoginVerificationImage = createSelector(getLoginPage, login.getLoginVerificationImage);\nexport const selectRandomCode = createSelector(getLoginPage, login.getRandomCode);\n\n\n/*===========================================Server response selectors===========================================*/\n\n//search e.g: search company , search worker\nexport const getSearchState = (state: AppState) => state.search;\nexport const selectSearchCompanies = createSelector(getSearchState, search.getCompanies);\nexport const selectSearchQuery = createSelector(getSearchState, search.getQuery);\nexport const selectSearchLoading = createSelector(getSearchState, search.getLoading);\nexport const selectSelectedCompany = createSelector(getSearchState, search.getSelectedCompany);\n\n//userInfo  from: login api\nexport const getUserInfo = (state: AppState) => state.userInfo;\nexport const selectUserInfo = createSelector(getUserInfo, info => info);\nexport const selectRealname = createSelector(getUserInfo, login.getRealname);\nexport const selectCapthca = createSelector(getUserInfo, login.getCaptcha);\nexport const selectAuthPass = createSelector(getUserInfo, login.getAuthPass);\nexport const selectSid = createSelector(getUserInfo, login.getSid);\nexport const selectUserId = createSelector(getUserInfo, login.getUserId);\n\n\n//phone verification code\nexport const getPhoneVerCode = (state: AppState) => state.phoneVerCode;\nexport const selectPhoneVerCodeCaptcha = createSelector(getPhoneVerCode, login.getRegisterPhoneVerCaptcha);\n\n//reset password verification code\nexport const getResetPhoneVerCode = (state: AppState) => state.resetPhoneVerCode;\nexport const selectResetPhoneVerCodeCaptcha = createSelector(getResetPhoneVerCode, login.getResetPhoneVerCaptcha);\n\n//register\nexport const getRegister = (state: AppState) => state.register;\nexport const selectRegisterUserId = createSelector(getRegister, login.getRegisterUserId);\n\n//reset password\nexport const getResetPassword =(state: AppState) => state.resetPassword;\nexport const selectResetPasswordId = createSelector(getResetPassword, login.getResetPasswordUserId);\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/index-reducer.ts","import {Injectable} from '@angular/core';\nimport {AppState} from '../../reducers/index-reducer';\nimport {Store} from '@ngrx/store';\nimport {Observable} from 'rxjs/Observable';\nimport {Subscription} from 'rxjs/Subscription';\nimport {AlertController, ToastController} from 'ionic-angular';\nimport {TranslateService} from '@ngx-translate/core';\nimport {ErrorMessage, ErrorResponse} from '../../interfaces/response-interface';\nimport 'rxjs/add/operator/do';\n\nexport interface ErrorInfo {\n  title: string;\n  msg: ErrorMessage;\n  buttons: string[];\n}\n\n@Injectable()\nexport class ErrorService {\n  constructor(public store: Store<AppState>,\n              public alertCtrl: AlertController,\n              public toastCtrl: ToastController,\n              public translate: TranslateService) {\n  }\n\n  /**\n   * @description\n   * Handle errors from server.\n   * */\n  private handleResponseError(obs: Observable<ErrorInfo>): Subscription {\n    return obs\n      .filter(info => !!info.msg.errorMessage)\n      .map(info => this.alertCtrl.create({\n        title: info.title,\n        subTitle: info.msg.errorMessage,\n        buttons: info.buttons\n      }))\n      .subscribe(alert => alert.present().then(() => {\n      }));\n  }\n\n  /**\n   * @description\n   * Handle errors from UI.\n   * */\n  handleUIError(msgKey: string) {\n    this.translate.get(msgKey).subscribe(message => {\n      this.toastCtrl.create({\n        message,\n        duration: 3000,\n        position: 'top'\n      })\n    });\n  }\n\n  /**\n   * @description\n   * Used to handle the errors on the specified stream. The stream should be  a request stream.\n   * */\n  handleErrorInSpecific(obs: Observable<ErrorResponse>, title: string) {\n\n    const button = 'CONFIRM_BUTTON';\n\n    const lang$ = this.translate.get([title, button])\n      .map(lang => ({title: lang[title], buttons: [lang[button]]}));\n\n    const error$: Observable<ErrorInfo> = obs.withLatestFrom(lang$)\n      .map(res => Object.assign({msg: res[0]}, res[1]) as ErrorInfo);\n\n    return this.handleResponseError(error$);\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serveices/errors/error-service.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 137;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 137\n// module chunks = 15","var map = {\n\t\"../pages/cards/cards.module\": [\n\t\t348,\n\t\t14\n\t],\n\t\"../pages/content/content.module\": [\n\t\t347,\n\t\t13\n\t],\n\t\"../pages/item-create/item-create.module\": [\n\t\t349,\n\t\t12\n\t],\n\t\"../pages/item-detail/item-detail.module\": [\n\t\t350,\n\t\t11\n\t],\n\t\"../pages/list-master/list-master.module\": [\n\t\t351,\n\t\t10\n\t],\n\t\"../pages/login/login.module\": [\n\t\t352,\n\t\t0\n\t],\n\t\"../pages/map/map.module\": [\n\t\t353,\n\t\t9\n\t],\n\t\"../pages/menu/menu.module\": [\n\t\t354,\n\t\t8\n\t],\n\t\"../pages/search-company/search-company.module\": [\n\t\t355,\n\t\t1\n\t],\n\t\"../pages/search/search.module\": [\n\t\t356,\n\t\t7\n\t],\n\t\"../pages/settings/settings.module\": [\n\t\t357,\n\t\t6\n\t],\n\t\"../pages/signup/signup.module\": [\n\t\t358,\n\t\t5\n\t],\n\t\"../pages/tabs/tabs.module\": [\n\t\t359,\n\t\t4\n\t],\n\t\"../pages/tutorial/tutorial.module\": [\n\t\t360,\n\t\t2\n\t],\n\t\"../pages/welcome/welcome.module\": [\n\t\t361,\n\t\t3\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 185;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 185\n// module chunks = 15","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\nimport { Item } from '../../models/item';\n\n@Injectable()\nexport class Items {\n  items: Item[] = [];\n\n  defaultItem: any = {\n    \"name\": \"Burt Bear\",\n    \"profilePic\": \"assets/img/speakers/bear.jpg\",\n    \"about\": \"Burt is a Bear.\",\n  };\n\n\n  constructor(public http: Http) {\n    let items = [\n      {\n        \"name\": \"Burt Bear\",\n        \"profilePic\": \"assets/img/speakers/bear.jpg\",\n        \"about\": \"Burt is a Bear.\"\n      },\n      {\n        \"name\": \"Charlie Cheetah\",\n        \"profilePic\": \"assets/img/speakers/cheetah.jpg\",\n        \"about\": \"Charlie is a Cheetah.\"\n      },\n      {\n        \"name\": \"Donald Duck\",\n        \"profilePic\": \"assets/img/speakers/duck.jpg\",\n        \"about\": \"Donald is a Duck.\"\n      },\n      {\n        \"name\": \"Eva Eagle\",\n        \"profilePic\": \"assets/img/speakers/eagle.jpg\",\n        \"about\": \"Eva is an Eagle.\"\n      },\n      {\n        \"name\": \"Ellie Elephant\",\n        \"profilePic\": \"assets/img/speakers/elephant.jpg\",\n        \"about\": \"Ellie is an Elephant.\"\n      },\n      {\n        \"name\": \"Molly Mouse\",\n        \"profilePic\": \"assets/img/speakers/mouse.jpg\",\n        \"about\": \"Molly is a Mouse.\"\n      },\n      {\n        \"name\": \"Paul Puppy\",\n        \"profilePic\": \"assets/img/speakers/puppy.jpg\",\n        \"about\": \"Paul is a Puppy.\"\n      }\n    ];\n\n    for (let item of items) {\n      this.items.push(new Item(item));\n    }\n  }\n\n  query(params?: any) {\n    if (!params) {\n      return this.items;\n    }\n\n    return this.items.filter((item) => {\n      for (let key in params) {\n        let field = item[key];\n        if (typeof field == 'string' && field.toLowerCase().indexOf(params[key].toLowerCase()) >= 0) {\n          return item;\n        } else if (field == params[key]) {\n          return item;\n        }\n      }\n      return null;\n    });\n  }\n\n  add(item: Item) {\n    this.items.push(item);\n  }\n\n  delete(item: Item) {\n    this.items.splice(this.items.indexOf(item), 1);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/mocks/providers/items.ts","\nimport {Action} from '@ngrx/store';\n\nexport const SET_BACK_BUTTON_TEXT = 'SET_BACK_BUTTON_TEXT';\n\nexport const SET_PLATFORM_DIRECTION = 'SET_PLATFORM_DIRECTION';\n\nexport const GENERATE_RANDOM_CODE = 'GENERATE_RANDOM_CODE';\n\nexport class SetBackButtonTextAction implements Action{\n  readonly type = SET_BACK_BUTTON_TEXT;\n\n  constructor(public payload: string){\n  }\n}\nexport class SetPlatformDirectionAction implements Action {\n  readonly type = SET_PLATFORM_DIRECTION;\n\n  constructor(public payload: string) {\n  }\n}\n\nexport type Actions = SetBackButtonTextAction\n  | SetPlatformDirectionAction;\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/config-action.ts","import {Injectable} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Store} from '@ngrx/store';\nimport {SetBackButtonTextAction, SetPlatformDirectionAction} from '../../actions/config-action';\nimport {Platform} from 'ionic-angular';\n\n@Injectable()\nexport class ConfigService {\n  constructor(private translate: TranslateService,\n              private store: Store<any>,\n              private platform: Platform) {\n  }\n\n  public init() {\n    this.initLanguage();\n    this.initConfig();\n  }\n\n  private initConfig() {\n    this.store.dispatch(new SetPlatformDirectionAction(this.platform.dir()));\n    this.translate.get(['BACK_BUTTON_TEXT']).subscribe(values => {\n      this.store.dispatch(new SetBackButtonTextAction(values.BACK_BUTTON_TEXT));\n    });\n  }\n\n  private initLanguage() {\n    this.translate.setDefaultLang('zh');\n    const browserLanguage = this.translate.getBrowserLang();\n    if (browserLanguage !== undefined) {\n      this.translate.use(browserLanguage);\n    } else {\n      this.translate.use('zh');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serveices/config/config-service.ts","import {Company, WorkerResponse} from '../interfaces/response-interface';\n\nexport const SEARCH_COMPANY = 'SEARCH_COMPANY';\n\nexport class SearchCompanyAction {\n  readonly type = SEARCH_COMPANY;\n\n  constructor(public payload: string) {\n  }\n}\n\nexport const SEARCH_WORKER = 'SEARCH_WORKER';\n\nexport class SearchWorkerAction {\n  readonly type = SEARCH_WORKER;\n\n  constructor(public payload: string) {\n  }\n}\n\nexport const SEARCH_COMPANY_COMPLETE = 'SEARCH_COMPANY_COMPLETE';\n\nexport class SearchCompanyCompleteAction {\n  readonly type = SEARCH_COMPANY_COMPLETE;\n\n  constructor(public payload: Company[]) {\n  }\n}\n\nexport const SEARCH_WORKER_COMPLETE = 'SEARCH_WORKER_COMPLETE';\n\nexport class SearchWorkerCompleteAction {\n  readonly type = SEARCH_WORKER_COMPLETE;\n\n  constructor(public payload: WorkerResponse[]) {\n  }\n}\n\nexport const SELECT_COMPANY = 'SELECT_COMPANY';\n\nexport class SelectCompanyAction {\n  readonly type = SELECT_COMPANY;\n\n  constructor(public payload: number){}\n}\n\nexport type  Actions = SearchCompanyAction\n  | SearchWorkerAction\n  | SearchCompanyCompleteAction\n  | SelectCompanyAction\n  | SearchWorkerCompleteAction;\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/search-action.ts","// The page the user lands on after opening the app and without a session\nexport const FirstRunPage = 'TutorialPage';\n\n// The main page the user will see as they use the app over a long period of time.\n// Change this if not using tabs\nexport const MainPage = 'TabsPage';\n\n// The initial root pages for our tabs (remove if not using tabs)\nexport const Tab1Root = 'ListMasterPage';\nexport const Tab2Root = 'SearchPage';\nexport const Tab3Root = 'SettingsPage';\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/pages.ts","import {Injectable} from '@angular/core';\nimport {ENV} from '@app/env';\nimport {QueueingSubject} from 'queueing-subject';\nimport websocketConnect from 'rxjs-websockets';\nimport 'rxjs/add/operator/retryWhen';\nimport 'rxjs/add/operator/delay';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/observable/fromEvent';\nimport {Subscription} from 'rxjs/Subscription';\nimport {WsRequest} from '../../interfaces/request-interface';\nimport {WsResponse} from '../../interfaces/response-interface';\nimport * as _ from 'lodash';\n\ninterface ErrorTipUnit {\n  message: string;\n}\n\n\n/**\n * @description This service is used for interacting with server.\n * */\n@Injectable()\nexport class WebsocketService {\n  private url = `ws://${ENV.DOMAIN}/wsapi`;\n  private inputStream: QueueingSubject<string>;\n  public messages: Observable<WsResponse>;\n  public connectionStatus: Observable<number>;\n  public connectionStatusSubscription: Subscription;\n\n  constructor() {\n    this.connect();\n  }\n\n  /**\n   * @description\n   * Sending data to the server and returning a stream for the requester to use.\n   * The requester can get the data needed from this stream.\n   * */\n  send(parameter: WsRequest) {\n    this.inputStream.next(JSON.stringify(parameter));\n    return this.messages.filter(res => res.command.path === parameter.command.path);\n  }\n\n  /**\n   * @description\n   * Create a socket connection to generate a multicast observable for service.\n   * Reinitiate the connection every 2 seconds when there is an error in the observable.\n   * */\n  connect() {\n\n    if (this.messages) return;\n\n    const {messages, connectionStatus} = websocketConnect(this.url, this.inputStream = new QueueingSubject<string>());\n\n    this.messages = messages\n      .map((msg: string): WsResponse => {\n        let response = JSON.parse(msg);\n        response.data = this.handleDataStructure(response.data);\n        response.isError = response.code > 2000;\n        if(response.isError) response.data.errorMessage = this.handleError(response);\n        return response;\n      })\n      .retryWhen(errors => errors.delay(2000))\n      .share();\n\n    this.connectionStatus = connectionStatus;\n\n    this.connectionStatusSubscription = connectionStatus.subscribe(numberConnected => {\n      console.log('number of connected sockets:', numberConnected)\n    });\n  }\n\n  /**\n   * @description\n   * Deal with the problem of uncertain data structure.\n   * */\n  private handleDataStructure(data: any): object {\n    if(typeof data === 'object') return data;\n    if(typeof data === 'string') return {information: data};\n    return {};\n  }\n\n  /**\n   * @description\n   * Get all error information from server.\n   * */\n  private handleError(data: WsResponse): string {\n    const message = this.arrangeErrorInfo(data.detail);\n    return _.isObject(data.detail) ? _.find([message, data.msg], _.identity) : data.msg;\n  }\n\n  /**\n   * @description\n   * Use depth first to recurse the attributes of the object and record the traversal path.\n   * */\n  private createErrorSheet(item, record = {}) {\n    if (_.isArray(item)) return _.map(item, this.curry2Right(_.assign)(record));\n    return _.map(_.toPairs(item), ele => {\n      let key = _.isArray(ele[1]) ? \"key\" : \"form\";\n      record[key] = ele[0];\n      return this.createErrorSheet(ele[1], record);\n    });\n  }\n\n  /**\n   * @description\n   * Iterate attribute of an object.\n   * */\n  private arrangeErrorInfo(data: string | object): string {\n    return _.isString(data) ? data : _.chain(data)\n      .map(item => this.createErrorSheet(item))\n      .flattenDeep()\n      .map((msg: ErrorTipUnit, index) => `${msg.message}\\n`)\n      .value()\n      .join('');\n  }\n\n  private curry2Right(fn) {\n    return (value1) => (value2) => fn.call(fn, value1, value2);\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/serveices/api/websocket-service.ts","import {Action} from '@ngrx/store';\nimport {Slide} from '../interfaces/tutorial-interface';\n\nexport const ADD_SLIDES = 'ADD_SLIDES';\nexport const ADD_SLIDE = 'ADD_SLIDE';\nexport const DELETE_SLIDE = 'DELETE_SLIDE';\n\nexport const TOGGLE_SKIP = 'TOGGLE_SKIP';\n\n\n\nexport class ToggleSkipAction implements Action {\n  readonly type = TOGGLE_SKIP;\n\n  constructor(public payload: boolean) {\n  };\n}\n\nexport class AddSlideAction implements Action {\n  readonly type = ADD_SLIDE;\n\n  constructor(public payload: Slide) {\n  };\n}\n\nexport class DeleteSlideAction implements Action {\n  readonly type = DELETE_SLIDE;\n\n  constructor(public payload: Slide) {\n  };\n}\n\nexport class AddSlidesAction implements Action {\n  readonly type = ADD_SLIDES;\n\n  constructor(public payload: Slide[]) {\n  };\n}\n\nexport type Actions =\n  AddSlidesAction\n  | AddSlideAction\n  | DeleteSlideAction\n  | ToggleSkipAction;\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/tutorial-action.ts","import {Injectable} from '@angular/core';\nimport {LoginOptions, RegisterOptions, ResetPasswordOptions} from '../../interfaces/request-interface';\n\nexport interface LoginFormModel {\n  mobilePhone: string;\n  password: string;\n  imageVerification: string;\n}\n\nexport interface SignupFormModel {\n  userType: string;\n  mobilePhone: string;\n  phoneVerification: string;\n  passwordInfo: {\n    password: string;\n    confirmPassword: string\n  }\n  imageVerification?: string;\n  company?: string;\n  realname?: string;\n}\n\nexport interface ResetPwdFormModel {\n  mobilePhone: string;\n  phoneVerification: string;\n  passwordInfo: {\n    password: string;\n    confirmPassword: string\n  }\n  imageVerification?: string;\n}\n\n@Injectable()\nexport class MapperService {\n  constructor() {\n  }\n\n  loginFormMap(form: LoginFormModel): LoginOptions {\n    return {\n      username: form.mobilePhone,\n      password: form.password,\n      captcha_code: form.imageVerification\n    };\n  }\n\n  signupFormMap(form: SignupFormModel): RegisterOptions {\n    return {\n      username: form.mobilePhone,\n      password: form.passwordInfo.password,\n      code: form.phoneVerification,\n      real_name: form.realname,\n      captcha_code: form.imageVerification\n    }\n  }\n\n  resetPwdForm(form: ResetPwdFormModel): ResetPasswordOptions {\n    return {\n      username: form.mobilePhone,\n      password: form.passwordInfo.password,\n      code: form.phoneVerification,\n      captcha_code: form.imageVerification\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serveices/api/mapper-service.ts","import {Injectable} from '@angular/core';\nimport {\n  LoginOptions, PhoneVerificationCodeOptions, RegisterOptions,\n  ResetPasswordOptions\n} from '../../interfaces/request-interface';\nimport {Store} from '@ngrx/store';\nimport {AppState} from '../../reducers/index-reducer';\nimport {\n  RegisterPhoneVerCodeAction, LoginAction, RegisterAction, ResetPasswordAction,\n  ResetPhoneVerCodeAction\n} from '../../actions/login-action';\nimport {Observable} from 'rxjs/Observable';\nimport {ErrorService} from '../errors/error-service';\nimport {Subscription} from 'rxjs/Subscription';\n\ninterface ProcessorFn {\n  (obs: Observable<any>): Subscription;\n}\n\n@Injectable()\nexport class ProcessorService {\n\n  constructor(public store: Store<AppState>,\n              public errorService: ErrorService) {\n  }\n\n  loginProcessor(option$: Observable<LoginOptions>): Subscription {\n    return option$.subscribe(option => this.store.dispatch(new LoginAction(option)));\n  }\n\n  /**\n   * FIXME NO.1\n   * @description 后台把注册和重置密码的手机验证码分成了2个接口，其逻辑和参数完全相同。所以这里分成2个函数处理，phoneVerificationProcessor\n   * 处理注册时的手机验证码，resetPhoneVerificationProcessor处理重置密码时的手机验证码。\n   * */\n  phoneVerificationProcessor(option$: Observable<PhoneVerificationCodeOptions>): Subscription {\n    return option$.subscribe(option => {\n      if (option.captcha_code === '') {\n        this.errorService.handleUIError('INPUT_IMAGE_VERIFICATION_TIP');\n      } else {\n        this.store.dispatch(new RegisterPhoneVerCodeAction(option));\n      }\n    })\n  }\n\n  resetPhoneVerificationProcessor(option$: Observable<PhoneVerificationCodeOptions>): Subscription {\n    return option$.subscribe(option => {\n      if (option.captcha_code === '') {\n        this.errorService.handleUIError('INPUT_IMAGE_VERIFICATION_TIP');\n      } else {\n        this.store.dispatch(new ResetPhoneVerCodeAction(option));\n      }\n    })\n  }\n\n  registerProcessor(option$: Observable<RegisterOptions>): Subscription {\n    return option$.subscribe(option => {\n      this.store.dispatch(new RegisterAction(option));\n    });\n  }\n\n  resetPwdProcessor(option$: Observable<ResetPasswordOptions>): Subscription {\n    return option$.subscribe(option => {\n      this.store.dispatch(new ResetPasswordAction(option));\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serveices/api/processor-service.ts","import {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {AppModule} from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule).then(() =>{});\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import {ErrorHandler, NgModule} from '@angular/core';\nimport {Http, HttpModule} from '@angular/http';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {Camera} from '@ionic-native/camera';\nimport {GoogleMaps} from '@ionic-native/google-maps';\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport {StatusBar} from '@ionic-native/status-bar';\nimport {IonicStorageModule, Storage} from '@ionic/storage';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {IonicApp, IonicErrorHandler, IonicModule} from 'ionic-angular';\n\nimport {Items} from '../mocks/providers/items';\nimport {Settings, User} from '../providers/providers';\nimport {MyApp} from './app.component';\nimport {Api} from '../providers/api/api';\nimport {ActionReducer, MetaReducer, Store, StoreModule} from '@ngrx/store';\nimport {reducers} from '../reducers/index-reducer';\nimport {ConfigService} from '../serveices/config/config-service';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {ENV} from '@app/env';\nimport {ProcessorService} from '../serveices/api/processor-service';\nimport {WebsocketService} from '../serveices/api/websocket-service';\nimport {HttpService} from '../serveices/api/http-service';\nimport {ErrorService} from '../serveices/errors/error-service';\nimport {MapperService} from '../serveices/api/mapper-service';\n\n// The translate loader needs to know where to load i18n files\n// in Ionic's static asset pipeline.\nexport function HttpLoaderFactory(http: Http) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\nexport function provideSettings(storage: Storage) {\n  /**\n   * The Settings provider takes a set of default settings for your app.\n   *\n   * You can add new settings options at any time. Once the settings are saved,\n   * these values will not overwrite the saved values (this can be done manually if desired).\n   */\n  return new Settings(storage, {\n    option1: true,\n    option2: 'Ionitron J. Framework',\n    option3: '3',\n    option4: 'Hello'\n  });\n}\n//\n// export function getMetaReducers(reducer: ActionReducer<any>): ActionReducer<any> {\n//   return function (state, action) {\n//     return reducer(state, action)\n//   }\n// }\n//\n// export const metaReducers: MetaReducer<any>[] = [getMetaReducers];\n\nexport function debug1(reducer: ActionReducer<any>): ActionReducer<any> {\n  return function(state, action) {\n    console.log('state', state);\n    return reducer(state, action);\n  }\n}\nexport function debug2(reducer: ActionReducer<any>): ActionReducer<any> {\n  return function(state, action) {\n    console.log('action', action);\n    return reducer(state, action);\n  }\n}\n\nexport const metaReducers: MetaReducer<any>[] = [debug1, debug2];\n\nconsole.log(ENV.DOMAIN);\n\n@NgModule({\n  declarations: [\n    MyApp\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [Http]\n      }\n    }),\n    IonicModule.forRoot(MyApp),\n    IonicStorageModule.forRoot(),\n    StoreModule.forRoot(reducers),\n    StoreDevtoolsModule.instrument({\n      maxAge: 15\n    })\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp\n  ],\n  providers: [\n    Api,\n    Items,\n    User,\n    Camera,\n    GoogleMaps,\n    SplashScreen,\n    StatusBar,\n    Store,\n    {provide: Settings, useFactory: provideSettings, deps: [Storage]},\n    // Keep this to enable Ionic's runtime error handling during development\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    ConfigService,\n    ProcessorService,\n    WebsocketService,\n    HttpService,\n    ErrorService,\n    MapperService\n  ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/**\n * A generic model that our Master-Detail pages list, create, and delete.\n *\n * Change \"Item\" to the noun your app will use. For example, a \"Contact,\" or a\n * \"Customer,\" or a \"Animal,\" or something like that.\n *\n * The Items service manages creating instances of Item, so go ahead and rename\n * that something that fits your app as well.\n */\nexport class Item {\n\n  constructor(fields: any) {\n    // Quick and dirty extend/assign fields to this model\n    for (const f in fields) {\n      this[f] = fields[f];\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/item.ts","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n/**\n * A simple settings/config class for storing key/value pairs with persistence.\n */\n@Injectable()\nexport class Settings {\n  private SETTINGS_KEY: string = '_settings';\n\n  settings: any;\n\n  _defaults: any;\n  _readyPromise: Promise<any>;\n\n  constructor(public storage: Storage, defaults: any) {\n    this._defaults = defaults;\n  }\n\n  load() {\n    return this.storage.get(this.SETTINGS_KEY).then((value) => {\n      if (value) {\n        this.settings = value;\n        return this._mergeDefaults(this._defaults);\n      } else {\n        return this.setAll(this._defaults).then((val) => {\n          this.settings = val;\n        })\n      }\n    });\n  }\n\n  _mergeDefaults(defaults: any) {\n    for (let k in defaults) {\n      if (!(k in this.settings)) {\n        this.settings[k] = defaults[k];\n      }\n    }\n    return this.setAll(this.settings);\n  }\n\n  merge(settings: any) {\n    for (let k in settings) {\n      this.settings[k] = settings[k];\n    }\n    return this.save();\n  }\n\n  setValue(key: string, value: any) {\n    this.settings[key] = value;\n    return this.storage.set(this.SETTINGS_KEY, this.settings);\n  }\n\n  setAll(value: any) {\n    return this.storage.set(this.SETTINGS_KEY, value);\n  }\n\n  getValue(key: string) {\n    return this.storage.get(this.SETTINGS_KEY)\n      .then(settings => {\n        return settings[key];\n      });\n  }\n\n  save() {\n    return this.setAll(this.settings);\n  }\n\n  get allSettings() {\n    return this.settings;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/settings/settings.ts","import 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\n\nimport { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\nimport { Api } from '../api/api';\n\n/**\n * Most apps have the concept of a User. This is a simple provider\n * with stubs for login/signup/etc.\n *\n * This User provider makes calls to our API at the `login` and `signup` endpoints.\n *\n * By default, it expects `login` and `signup` to return a JSON object of the shape:\n *\n * ```json\n * {\n *   status: 'success',\n *   user: {\n *     // User fields your app needs, like \"id\", \"name\", \"email\", etc.\n *   }\n * }\n * ```\n *\n * If the `status` field is not `success`, then an error is detected and returned.\n */\n@Injectable()\nexport class User {\n  _user: any;\n\n  constructor(public http: Http, public api: Api) {\n  }\n\n  /**\n   * Send a POST request to our login endpoint with the data\n   * the user entered on the form.\n   */\n  login(accountInfo: any) {\n    let seq = this.api.post('login', accountInfo).share();\n\n    seq\n      .map(res => res.json())\n      .subscribe(res => {\n        // If the API returned a successful response, mark the user as logged in\n        if (res.status == 'success') {\n          this._loggedIn(res);\n        } else {\n        }\n      }, err => {\n        console.error('ERROR', err);\n      });\n\n    return seq;\n  }\n\n  /**\n   * Send a POST request to our signup endpoint with the data\n   * the user entered on the form.\n   */\n  signup(accountInfo: any) {\n    let seq = this.api.post('signup', accountInfo).share();\n\n    seq\n      .map(res => res.json())\n      .subscribe(res => {\n        // If the API returned a successful response, mark the user as logged in\n        if (res.status == 'success') {\n          this._loggedIn(res);\n        }\n      }, err => {\n        console.error('ERROR', err);\n      });\n\n    return seq;\n  }\n\n  /**\n   * Log the user out, which forgets the session\n   */\n  logout() {\n    this._user = null;\n  }\n\n  /**\n   * Process a login/signup response to store user data\n   */\n  _loggedIn(resp) {\n    this._user = resp.user;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user/user.ts","import * as config from '../actions/config-action'\n\nexport interface State {\n  backButtonText: string;\n  defaultDirection: string;\n}\n\nexport const initialState: State = {\n  backButtonText: 'Back',\n  defaultDirection: 'ltr',\n};\n\nexport function reducer(state = initialState, action: config.Actions) {\n  switch (action.type) {\n    case config.SET_BACK_BUTTON_TEXT:\n      return Object.assign({}, state, {backButtonText: action.payload});\n\n    case config.SET_PLATFORM_DIRECTION:\n      return Object.assign({}, state, {defaultDirection: action.payload});\n\n    default:\n      return state;\n  }\n}\n\nexport const getBackButtonText = (state: State) => state.backButtonText;\n\nexport const getPlatFormDirection = (state: State) => state.defaultDirection;\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/config-reducer.ts","import * as actions from '../actions/tutorial-action';\nimport {Slide} from '../interfaces/tutorial-interface';\n\nexport interface State {\n  skipState: boolean;\n  welcomeSlides: Slide[];\n  defaultDirection: string;\n}\n\nexport const initialState: State = {\n  skipState: true,\n  welcomeSlides: [],\n  defaultDirection: 'ltr'\n};\n\nexport function reducer(state = initialState, action: actions.Actions) {\n  switch (action.type) {\n    case actions.TOGGLE_SKIP: {\n      return {\n        skipState: action.payload,\n        welcomeSlides: state.welcomeSlides,\n        defaultDirection: state.defaultDirection\n      }\n    }\n\n    case actions.ADD_SLIDES: {\n      return {\n        skipState: state.skipState,\n        welcomeSlides: action.payload,\n        defaultDirection: state.defaultDirection\n      }\n    }\n\n    case actions.ADD_SLIDE: {\n      return {\n        skipState: state.skipState,\n        welcomeSlides: [...state.welcomeSlides, action.payload],\n        defaultDirection: state.defaultDirection\n      }\n    }\n\n    case actions.DELETE_SLIDE:\n      return {\n        skipState: state.skipState,\n        welcomeSlides: state.welcomeSlides.filter((slide: Slide) => slide.title !== action.payload.title),\n        defaultDirection: state.defaultDirection\n      }\n    default:\n      return state;\n  }\n}\n\n\nexport const getTutorialSlides = (state: State) => state.welcomeSlides;\n\nexport const getSkipState = (state: State) => state.skipState;\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/tutorial-reducer.ts","import * as actions from '../actions/login-action';\nimport {\n  LOGIN,\n  SHOW_SPECIFIC_INNER_SLIDE,\n  SHOW_SPECIFIC_SLIDE,\n  UPDATE_RANDOM_CODE\n} from '../actions/login-action';\nimport {LoginOptions} from '../interfaces/request-interface';\nimport {ENV} from '@app/env';\nimport {\n  RegisterResponse, LoginResponse, ResetPasswordResponse,\n  PhoneVerCodeResponse\n} from '../interfaces/response-interface';\n\nexport interface State {\n  activeIndexOfSlides: number\n  activeIndexOfInnerSlides: number,\n  loginForm: LoginOptions,\n  loginVerificationImage: string,\n  randomCode: string;\n}\n\n/*=================================================UI state=======================================================*/\n\nexport const initialSate: State = {\n  activeIndexOfSlides: 0,\n  activeIndexOfInnerSlides: 0,\n  loginForm: {  //FIXME These data have security hidden dangers and should not be preserved.\n    username: '',\n    password: '',\n    captcha_code: '',\n    rand_captcha_key: ''\n  },\n  loginVerificationImage: '',\n  randomCode: '00000'\n};\n\nexport function reducer(state = initialSate, action: actions.Actions): State {\n  switch (action.type) {\n    case SHOW_SPECIFIC_SLIDE:\n      return Object.assign({}, state, {activeIndexOfSlides: action.payload});\n\n    case SHOW_SPECIFIC_INNER_SLIDE:\n      return Object.assign({}, state, {activeIndexOfInnerSlides: action.payload});\n\n    case LOGIN:\n      return Object.assign({}, state, {loginForm: action.payload});\n\n    case UPDATE_RANDOM_CODE:\n      return Object.assign({}, state, {\n        randomCode: action.payload,\n        loginVerificationImage: `http://${ENV.DOMAIN}/check_captcha/${action.payload}`\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport const getActiveIndexOfSlides = (state: State) => state.activeIndexOfSlides;\n\nexport const getActiveIndexOfInnerSlides = (state: State) => state.activeIndexOfInnerSlides;\n\nexport const getLoginForm = (state: State) => state.loginForm;\n\nexport const getLoginVerificationImage = (state: State) => state.loginVerificationImage;\n\nexport const getRandomCode = (state: State) => state.randomCode;\n\n\n/*=====================================================login api response==========================================*/\n\nexport const initialLoginResponse: LoginResponse = {\n  realname: '',\n  sid: '',\n  user_id: NaN,\n  auth_pass: false,\n  captcha: false,\n  groups_list: [],\n  face_image: ''\n};\n\nexport function userInfoReducer(state = initialLoginResponse, action: actions.Actions): LoginResponse {\n  switch (action.type) {\n    case actions.LOGIN_SUCCESS:\n      return Object.assign({}, action.payload);\n    case actions.LOGIN_FAIL:\n      return Object.assign({}, initialLoginResponse, action.payload);\n    default:\n      return state;\n  }\n}\n\nexport const getRealname = (state: LoginResponse) => state.realname;\n\nexport const getSid = (state: LoginResponse) => state.sid;\n\nexport const getUserId = (state: LoginResponse) => state.user_id;\n\nexport const getAuthPass = (state: LoginResponse) => state.auth_pass;\n\nexport const getCaptcha = (state: LoginResponse) => state.captcha;\n\nexport const getGroupList = (state: LoginResponse) => state.groups_list;\n\nexport const getFaceImage = (state: LoginResponse) => state.face_image;\n\n\n/*================================================Register api response============================================*/\n\nexport const initialRegisterState: RegisterResponse = {\n  user_id: NaN\n};\n\nexport function registerReducer(state = initialRegisterState, action: actions.Actions) {\n  switch (action.type) {\n    case actions.REGISTER_SUCCESS:\n      return {...action.payload};\n\n    case actions.REGISTER_FAIL:\n      return {...action.payload, ...initialRegisterState};\n\n    default:\n      return state;\n\n  }\n}\n\nexport const getRegisterUserId = (state: RegisterResponse) =>state.user_id;\n\n/*================================================Reset password response============================================*/\n\nexport const initialResetPasswordState: ResetPasswordResponse = {\n  user_id: NaN\n};\n\nexport function resetPasswordReducer(state = initialResetPasswordState, action: actions.Actions) {\n  switch (action.type) {\n    case actions.RESET_PASSWORD_FAIL:\n      return {...action.payload};\n\n    case actions.RESET_PASSWORD_SUCCESS:\n      return {...action.payload, ...initialResetPasswordState};\n\n    default:\n      return state;\n  }\n}\n\nexport const getResetPasswordUserId = (state: ResetPasswordResponse) => state.user_id;\n\n\n/*===========================================Register phone verification code=====================================*/\n\nexport const initialPhoneVerCode: PhoneVerCodeResponse = {\n  captcha: false\n};\n\nexport function registerPhoneVerReducer(state = initialPhoneVerCode, action: actions.Actions) {\n  switch (action.type) {\n    case actions.PHONE_VERIFICATION_CODE_FAIL:\n      const captcha = action.payload.captcha || false;\n      return Object.assign({}, action.payload, {captcha});\n\n    case actions.PHONE_VERIFICATION_CODE_SUCCESS:\n    default:\n      return state;\n  }\n}\n\nexport const getRegisterPhoneVerCaptcha = (state: PhoneVerCodeResponse) => state.captcha;\n\n/*===========================================Reset phone verification code=====================================*/\n\n\nexport const initialResetPhoneVerCode: PhoneVerCodeResponse = {\n  captcha: false\n};\n\nexport function resetPwdPhoneVerReducer(state = initialResetPhoneVerCode, action: actions.Actions) {\n  switch (action.type) {\n    case actions.RESET_PHONE_VERIFICATION_CODE_FAIL:\n      const captcha = action.payload.captcha || false;\n      return Object.assign({}, action.payload, {captcha});\n\n    case actions.RESET_PHONE_VERIFICATION_CODE_SUCCESS:\n    default:\n      return state;\n  }\n}\n\nexport const getResetPhoneVerCaptcha = (state: PhoneVerCodeResponse) => state.captcha;\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/login-reducer.ts","import * as actions from '../actions/search-action';\nimport {SEARCH_COMPANY, SEARCH_COMPANY_COMPLETE, SELECT_COMPANY} from '../actions/search-action';\nimport {Company} from '../interfaces/response-interface';\n\nexport interface State {\n  companies: Company[];\n  loading: boolean;\n  query: string,\n  selected: Company\n}\n\nexport const initialSate: State = {\n  companies: [],\n  loading: false,\n  query: '',\n  selected: null\n};\n\n\nexport function reducer(state = initialSate, action: actions.Actions): State {\n  switch (action.type) {\n    case SEARCH_COMPANY:\n      const query = action.payload;\n\n      if(query === '') {\n        return {\n          companies: [],\n          loading: false,\n          selected: null,\n          query\n        }\n      }\n      return Object.assign({}, state, {query, loading: true});\n    case SEARCH_COMPANY_COMPLETE:\n      const companies = action.payload;\n\n      return {\n        companies,\n        loading: false,\n        query: state.query,\n        selected: null\n      };\n    case SELECT_COMPANY:\n      const selected = state.companies.find(company => company.id === action.payload);\n\n      return Object.assign({},state,{selected});\n    default:\n      return state;\n  }\n}\n\nexport const getQuery = (state: State) => state.query;\n\nexport const getCompanies = (state: State) => state.companies;\n\nexport const getLoading = (state: State) => state.loading;\n\nexport const getSelectedCompany = (state: State) => state.selected;\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/search-reducer.ts","import {Component, ViewChild} from '@angular/core';\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport {StatusBar} from '@ionic-native/status-bar';\nimport {Config, Nav, Platform} from 'ionic-angular';\n\nimport {FirstRunPage} from '../pages/pages';\nimport {Settings} from '../providers/providers';\nimport {Store} from '@ngrx/store';\nimport {ConfigService} from '../serveices/config/config-service';\n\nimport * as fromRoot from '../reducers/index-reducer';\n\n@Component({\n  templateUrl: './app.component.html'\n})\nexport class MyApp {\n  rootPage = FirstRunPage;\n\n  @ViewChild(Nav) nav: Nav;\n\n  pages: any[] = [\n    { title: 'Tutorial', component: 'TutorialPage' },\n    { title: 'Welcome', component: 'WelcomePage' },\n    { title: 'Tabs', component: 'TabsPage' },\n    { title: 'Cards', component: 'CardsPage' },\n    { title: 'Content', component: 'ContentPage' },\n    { title: 'Login', component: 'LoginPage' },\n    { title: 'Signup', component: 'SignupPage' },\n    { title: 'Map', component: 'MapPage' },\n    { title: 'Master Detail', component: 'ListMasterPage' },\n    { title: 'Menu', component: 'MenuPage' },\n    { title: 'Settings', component: 'SettingsPage' },\n    { title: 'Search', component: 'SearchPage' },\n    { title: 'SearchCompany', component: 'SearchCompanyPage'}\n  ];\n\n  constructor(private platform: Platform,\n              settings: Settings,\n              private config: Config,\n              private statusBar: StatusBar,\n              private splashScreen: SplashScreen,\n              private configService: ConfigService,\n              private store: Store<fromRoot.AppState>) {\n    this.configService.init();\n    this.store.select(fromRoot.selectButtonText).subscribe(text => this.config.set('backButtonText', text));\n  }\n\n  /**\n   * @ionViewDidLoad\n   * Ionic lifecycle event, ionic implements 8 lifecycle hooks. 6 about them are run time related, the other are permission related.\n   * */\n  ionViewDidLoad() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n\n    // noinspection JSIgnoredPromiseFromCall\n    this.nav.setRoot(page.component);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","\n\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\n\n@Injectable()\nexport class HttpService {\n\n  response$: Observable<any>;\n\n  constructor(){}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/serveices/api/http-service.ts","import {Action} from '@ngrx/store';\nimport {\n  LoginOptions, PhoneVerificationCodeOptions, RegisterOptions,\n  ResetPasswordOptions\n} from '../interfaces/request-interface';\nimport {\n  RegisterResponse, LoginResponse, ResetPasswordResponse,\n  PhoneVerCodeResponse\n} from '../interfaces/response-interface';\n\n/*====================================================SLIDES ACTIONS===============================================*/\n\nexport const SHOW_SPECIFIC_SLIDE = 'SHOW_SPECIFIC_SLIDE';\n\nexport const SHOW_SPECIFIC_INNER_SLIDE = 'SHOW_SPECIFIC_INNER_SLIDE';\n\nexport class ShowSpecificSlideAction implements Action {\n  readonly type = SHOW_SPECIFIC_SLIDE;\n\n  constructor(public payload: number) {\n  }\n}\n\nexport class ShowSpecificInnerSlideAction implements Action {\n  readonly type = SHOW_SPECIFIC_INNER_SLIDE;\n\n  constructor(public payload: number) {\n  }\n}\n\n/*====================================================Login actions===============================================*/\n\nexport const LOGIN = 'LOGIN';\n\nexport class LoginAction implements Action {\n  readonly type = LOGIN;\n\n  constructor(public payload: LoginOptions) {\n  }\n}\n\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport class LoginFailAction implements Action {\n  readonly type = LOGIN_FAIL;\n\n  constructor(public payload: { captcha: boolean }) {\n  }\n}\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n\nexport class LoginSuccessAction implements Action {\n  readonly type = LOGIN_SUCCESS;\n\n  constructor(public payload: LoginResponse) {\n  }\n}\n\n/*===================================Image verification code actions===============================================*/\n\nexport const UPDATE_VERIFICATION_IMAGE = 'UPDATE_VERIFICATION_IMAGE';\n\nexport class UpdateVerificationImageAction implements Action {\n  readonly type = UPDATE_VERIFICATION_IMAGE;\n\n  constructor(public payload: string) {\n  };\n}\n\nexport const UPDATE_RANDOM_CODE = 'UPDATE_RANDOM_CODE';\n\nexport class UpdateRandomCode implements Action {\n  readonly type = UPDATE_RANDOM_CODE;\n\n  constructor(public payload: string) {\n  };\n}\n\n/*=========================================Register phone verification actions===============================================*/\n\nexport const GET_PHONE_VERIFICATION_CODE = 'GET_PHONE_VERIFICATION_CODE';\n\nexport class RegisterPhoneVerCodeAction {\n  readonly type = GET_PHONE_VERIFICATION_CODE;\n\n  constructor(public payload: PhoneVerificationCodeOptions) {\n  }\n}\n\nexport const PHONE_VERIFICATION_CODE_FAIL = 'PHONE_VERIFICATION_CODE_FAIL';\n\nexport class RegisterPhoneVerCodeFailAction {\n  readonly type = PHONE_VERIFICATION_CODE_FAIL;\n\n  constructor(public payload: PhoneVerCodeResponse) {\n  }\n}\n\nexport const PHONE_VERIFICATION_CODE_SUCCESS = 'PHONE_VERIFICATION_CODE_SUCCESS';\n\nexport class RegisterPhoneVerCodeSuccessAction {\n  readonly type = PHONE_VERIFICATION_CODE_SUCCESS;\n\n  constructor(public payload: PhoneVerCodeResponse) {\n  }\n}\n\n/*===============================================register actions==================================================*/\n\nexport const REGISTER = 'REGISTER';\n\nexport class RegisterAction {\n  readonly type = REGISTER;\n\n  constructor(public payload: RegisterOptions) {\n  };\n}\n\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport class RegisterFailAction {\n  readonly type = REGISTER_FAIL;\n\n  constructor(public payload: RegisterResponse) {\n  }\n}\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\n\nexport class RegisterSuccessAction {\n  readonly type = REGISTER_SUCCESS;\n\n  constructor(public payload: RegisterResponse) {\n  };\n}\n\n/*=============================================Reset password=======================================================*/\n\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\n\nexport class ResetPasswordAction {\n  readonly type = RESET_PASSWORD;\n\n  constructor(public payload: ResetPasswordOptions) {}\n}\n\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\n\nexport class ResetPasswordFailAction {\n  readonly type = RESET_PASSWORD_FAIL;\n\n  constructor(public payload: ResetPasswordResponse) {}\n}\n\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\n\nexport class ResetPasswordSuccessAction {\n  readonly type = RESET_PASSWORD_SUCCESS;\n\n  constructor(public payload: ResetPasswordResponse) {}\n}\n\n/*=============================================Reset password phone verification code=======================================================*/\n\nexport const RESET_PHONE_VERIFICATION_CODE = 'RESET_PHONE_VERIFICATION_CODE';\n\nexport class ResetPhoneVerCodeAction {\n  readonly type = RESET_PHONE_VERIFICATION_CODE;\n\n  constructor(public payload: PhoneVerificationCodeOptions) {\n  }\n}\n\nexport const RESET_PHONE_VERIFICATION_CODE_FAIL = 'RESET_PHONE_VERIFICATION_CODE_FAIL';\n\nexport class ResetPhoneVerCodeFailAction {\n  readonly type = RESET_PHONE_VERIFICATION_CODE_FAIL;\n\n  constructor(public payload: PhoneVerCodeResponse) {\n  }\n}\n\nexport const RESET_PHONE_VERIFICATION_CODE_SUCCESS = 'RESET_PHONE_VERIFICATION_CODE_SUCCESS';\n\nexport class ResetPhoneVerCodeSuccessAction {\n  readonly type = RESET_PHONE_VERIFICATION_CODE_SUCCESS;\n\n  constructor(public payload: PhoneVerCodeResponse) {\n  }\n}\n\n\nexport type Actions = ShowSpecificSlideAction\n  | ShowSpecificInnerSlideAction\n  | LoginAction\n  | LoginFailAction\n  | LoginSuccessAction\n  | UpdateVerificationImageAction\n  | UpdateRandomCode\n  | RegisterPhoneVerCodeAction\n  | RegisterPhoneVerCodeFailAction\n  | RegisterPhoneVerCodeSuccessAction\n  | RegisterAction\n  | RegisterFailAction\n  | RegisterSuccessAction\n  | ResetPasswordAction\n  | ResetPasswordFailAction\n  | ResetPasswordSuccessAction\n  | ResetPhoneVerCodeAction\n  | ResetPhoneVerCodeFailAction\n  | ResetPhoneVerCodeSuccessAction;\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/login-action.ts","export const ENV = {\n  get IS_PROD () {\n    return false\n  },\n\n  get DOMAIN () {\n    return 'zldtest.zlddata.cn'\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.zldtest.ts","import 'rxjs/add/operator/map';\n\nimport { Injectable } from '@angular/core';\nimport { Http, RequestOptions, URLSearchParams } from '@angular/http';\n\n/**\n * Api is a generic REST Api handler. Set your API url first.\n */\n@Injectable()\nexport class Api {\n  url: string = 'https://example.com/api/v1';\n\n  constructor(public http: Http) {\n  }\n\n  get(endpoint: string, params?: any, options?: RequestOptions) {\n    if (!options) {\n      options = new RequestOptions();\n    }\n\n    // Support easy query params for GET requests\n    if (params) {\n      let p = new URLSearchParams();\n      for (let k in params) {\n        p.set(k, params[k]);\n      }\n      // Set the search field if we have params and don't already have\n      // a search field set in options.\n      options.search = !options.search && p || options.search;\n    }\n\n    return this.http.get(this.url + '/' + endpoint, options);\n  }\n\n  post(endpoint: string, body: any, options?: RequestOptions) {\n    return this.http.post(this.url + '/' + endpoint, body, options);\n  }\n\n  put(endpoint: string, body: any, options?: RequestOptions) {\n    return this.http.put(this.url + '/' + endpoint, body, options);\n  }\n\n  delete(endpoint: string, options?: RequestOptions) {\n    return this.http.delete(this.url + '/' + endpoint, options);\n  }\n\n  patch(endpoint: string, body: any, options?: RequestOptions) {\n    return this.http.put(this.url + '/' + endpoint, body, options);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/api/api.ts"],"sourceRoot":""}